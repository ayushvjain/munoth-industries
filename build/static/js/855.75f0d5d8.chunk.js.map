{"version":3,"file":"static/js/855.75f0d5d8.chunk.js","mappings":"sKAIA,MA8EA,EA9EuBA,IAAsD,IAArD,QAAEC,EAAO,YAAEC,EAAW,MAAEC,EAAK,SAAEC,EAAQ,KAAEC,GAAML,EACnE,MAAOM,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,IAC9BC,EAAgBC,IAAqBF,EAAAA,EAAAA,UACxCP,EAAQU,MAAKC,GAAOA,EAAIT,QAAUA,KAAU,CAAEU,MAAOX,EAAaC,MAAO,KAEvEW,GAAcC,EAAAA,EAAAA,QAAO,OAG3BC,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAsBC,IACpBJ,EAAYK,UAAYL,EAAYK,QAAQC,SAASF,EAAMG,SAC3Dd,GAAU,EACd,EAGEe,EAAgBJ,IACA,WAAdA,EAAMK,KACNhB,GAAU,EACd,EAMJ,OAHAiB,SAASC,iBAAiB,YAAaR,GACvCO,SAASC,iBAAiB,UAAWH,GAE9B,KACHE,SAASE,oBAAoB,YAAaT,GAC1CO,SAASE,oBAAoB,UAAWJ,EAAa,CACxD,GACF,IAcH,OACIK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAkBC,IAAKf,EAAYgB,SAAA,EAC9CH,EAAAA,EAAAA,MAAA,OACIC,UAAS,4BAAAG,OAA8BzB,EAAS,SAAW,IAC3D0B,QAhBSC,KACjB1B,GAAWD,EAAO,EAeYwB,SAAA,EAEtBI,EAAAA,EAAAA,KAAA,QACIN,UAAU,gBACVO,MAAO,CACHC,MAAO3B,EAAeN,MAAQ,OAAS,QACzC2B,SAEDrB,EAAeI,SAEpBqB,EAAAA,EAAAA,KAAA,QAAMN,UAAS,yBAAAG,OAA2BzB,EAAS,UAAY,IAAKwB,SAAC,eAKzEI,EAAAA,EAAAA,KAAA,OAAKN,UAAS,2BAAAG,OAA6BzB,EAAS,OAAS,IAAKwB,SAC7D7B,EAAQoC,KAAI,CAACC,EAAQC,KAClBL,EAAAA,EAAAA,KAAA,OAEIN,UAAS,0BAAAG,OACLtB,EAAeN,QAAUmC,EAAOnC,MAAQ,WAAa,IAEzD6B,QAASA,IAlCFM,KACvB5B,EAAkB4B,GAClB/B,GAAU,GACNH,GACAA,EAAS,CAAEiB,OAAQ,CAAEhB,OAAMF,MAAOmC,EAAOnC,QAC7C,EA6B+BqC,CAAkBF,GAAQR,SAExCQ,EAAOzB,OANH0B,SAUf,ECmEd,QA3IA,WACI,MAAOE,EAAUC,IAAelC,EAAAA,EAAAA,UAAS,CACrCH,KAAM,GACNsC,MAAO,GACPC,MAAO,GACPC,QAAS,GACTC,QAAS,KAiBPC,EAAqBC,IACvB,MAAM,KAAE3C,EAAI,MAAEF,GAAU6C,EAAE3B,OAC1BqB,GAAYO,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTD,GAAI,IACP,CAAC5C,GAAOF,KACT,EA2CP,OAhBAa,EAAAA,EAAAA,YAAU,KACN,MAAMmC,EAAS3B,SAAS4B,cAAc,kBAChCC,EAAS7B,SAAS4B,cAAc,gBAItC,OAHID,GAAUE,IACVF,EAAOhB,MAAMmB,OAAM,GAAAvB,OAAMsB,EAAOE,wBAAwBD,OAAM,OAE3D,KACCH,IAAQA,EAAOhB,MAAMmB,OAAS,GAAE,CACvC,GACF,KAGHtC,EAAAA,EAAAA,YAAU,KACNwC,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,UAAW,GAChD,KAGCzB,EAAAA,EAAAA,KAAA,OAAKN,UAAU,yBAAwBE,UACnCH,EAAAA,EAAAA,MAAA,WAASC,UAAU,uBAAsBE,SAAA,EACrCH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2BE,SAAA,EACtCI,EAAAA,EAAAA,KAAA,MAAIN,UAAU,qBAAoBE,SAAC,gBACnCH,EAAAA,EAAAA,MAAA,QAAMC,UAAU,oBAAoBgC,SA7C/BC,UACjBb,EAAEc,iBACF,WAC2BC,MAAM,kCAAmC,CAC5DC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU3B,MAGZ4B,IACTC,MAAM,8BACN5B,EAAY,CAAErC,KAAM,GAAIsC,MAAO,GAAIC,MAAO,GAAIC,QAAS,GAAIC,QAAS,MAEpEwB,MAAM,0BAEd,CAAE,MAAOC,GACLD,MAAM,0BACNE,QAAQD,MAAMA,EAClB,GAyBuEzC,SAAA,EACvDI,EAAAA,EAAAA,KAAA,SACIuC,KAAK,OACLpE,KAAK,OACLH,YAAY,YACZC,MAAOsC,EAASpC,KAChBD,SAAU2C,EACV2B,UAAQ,KAGZxC,EAAAA,EAAAA,KAAA,SACIuC,KAAK,QACLpE,KAAK,QACLH,YAAY,gBACZC,MAAOsC,EAASE,MAChBvC,SAAU2C,EACV2B,UAAQ,KAGZxC,EAAAA,EAAAA,KAAA,SACIuC,KAAK,MACLpE,KAAK,QACLH,YAAY,eACZC,MAAOsC,EAASG,MAChBxC,SAAU2C,EACV2B,UAAQ,KAGZxC,EAAAA,EAAAA,KAACyC,EAAc,CACX1E,QAhGD,CACnB,CAAEY,MAAO,mBAAoBV,MAAO,IACpC,CAAEU,MAAO,eAAgBV,MAAO,gBAChC,CAAEU,MAAO,cAAeV,MAAO,eAC/B,CAAEU,MAAO,iBAAkBV,MAAO,kBAClC,CAAEU,MAAO,YAAaV,MAAO,aAC7B,CAAEU,MAAO,kBAAmBV,MAAO,mBACnC,CAAEU,MAAO,cAAeV,MAAO,eAC/B,CAAEU,MAAO,SAAUV,MAAO,UAC1B,CAAEU,MAAO,SAAUV,MAAO,UAC1B,CAAEU,MAAO,SAAUV,MAAO,UAC1B,CAAEU,MAAO,SAAUV,MAAO,WAsFND,YAAY,mBACZC,MAAOsC,EAASI,QAChBzC,SAAU2C,EACV1C,KAAK,aAGT6B,EAAAA,EAAAA,KAAA,YACI7B,KAAK,UACLH,YAAY,4BACZ0E,KAAK,IACLzE,MAAOsC,EAASK,QAChB1C,SAAU2C,EACV2B,UAAQ,KAGZxC,EAAAA,EAAAA,KAAA,UAAQuC,KAAK,SAAQ3C,SAAC,gBAI9BH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBE,SAAA,EAC9BI,EAAAA,EAAAA,KAAA,MAAAJ,SAAI,gBACJI,EAAAA,EAAAA,KAAA,KAAAJ,UAAGI,EAAAA,EAAAA,KAAA,UAAAJ,SAAQ,yBACXI,EAAAA,EAAAA,KAAA,KAAAJ,SAAG,qCACHI,EAAAA,EAAAA,KAAA,KAAAJ,SAAG,8BACHI,EAAAA,EAAAA,KAAA,KAAAJ,SAAG,sBACHI,EAAAA,EAAAA,KAAA,KAAAJ,SAAG,6CACHI,EAAAA,EAAAA,KAAA,KAAAJ,SAAG,sDAKvB,C","sources":["components/customDropdown.js","pages/contact.js"],"sourcesContent":["// CustomDropdown.js\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport './customDropdown.css';\r\n\r\nconst CustomDropdown = ({ options, placeholder, value, onChange, name }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [selectedOption, setSelectedOption] = useState(\r\n        options.find(opt => opt.value === value) || { label: placeholder, value: '' }\r\n    );\r\n    const dropdownRef = useRef(null);\r\n\r\n    // Close dropdown when clicking outside\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n                setIsOpen(false);\r\n            }\r\n        };\r\n\r\n        const handleEscape = (event) => {\r\n            if (event.key === 'Escape') {\r\n                setIsOpen(false);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        document.addEventListener('keydown', handleEscape);\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n            document.removeEventListener('keydown', handleEscape);\r\n        };\r\n    }, []);\r\n\r\n    const handleToggle = () => {\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    const handleOptionClick = (option) => {\r\n        setSelectedOption(option);\r\n        setIsOpen(false);\r\n        if (onChange) {\r\n            onChange({ target: { name, value: option.value } });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"custom-dropdown\" ref={dropdownRef}>\r\n            <div \r\n                className={`custom-dropdown-selected ${isOpen ? 'active' : ''}`}\r\n                onClick={handleToggle}\r\n            >\r\n                <span \r\n                    className=\"selected-text\"\r\n                    style={{ \r\n                        color: selectedOption.value ? '#333' : '#999' \r\n                    }}\r\n                >\r\n                    {selectedOption.label}\r\n                </span>\r\n                <span className={`custom-dropdown-arrow ${isOpen ? 'rotated' : ''}`}>\r\n                    â–¼\r\n                </span>\r\n            </div>\r\n            \r\n            <div className={`custom-dropdown-options ${isOpen ? 'show' : ''}`}>\r\n                {options.map((option, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={`custom-dropdown-option ${\r\n                            selectedOption.value === option.value ? 'selected' : ''\r\n                        }`}\r\n                        onClick={() => handleOptionClick(option)}\r\n                    >\r\n                        {option.label}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomDropdown;","// src/pages/Contact.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport CustomDropdown from '../components/customDropdown';\r\nimport './contact.css';\r\nimport '../components/customDropdown.css';\r\n\r\nfunction Contact() {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        product: '',\r\n        message: ''\r\n    });\r\n\r\n    const productOptions = [\r\n        { label: 'Select a Product', value: '' },\r\n        { label: 'Tissue paper', value: 'tissue-paper' },\r\n        { label: 'Toilet roll', value: 'toilet-roll' },\r\n        { label: 'Kitchen towels', value: 'kitchen-towels' },\r\n        { label: 'Hrt rolls', value: 'hrt-rolls' },\r\n        { label: 'Airlaid napkins', value: 'airlaid-napkins' },\r\n        { label: 'Fresh wipes', value: 'fresh-wipes' },\r\n        { label: 'C-fold', value: 'c-fold' },\r\n        { label: 'M-Fold', value: 'm-fold' },\r\n        { label: 'L-Fold', value: 'l-fold' },\r\n        { label: 'N-Fold', value: 'n-fold' }\r\n    ];\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch(\"https://formspree.io/f/xovljlpd\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(formData)\r\n            });\r\n\r\n            if (response.ok) {\r\n                alert(\"Message sent successfully!\");\r\n                setFormData({ name: '', email: '', phone: '', product: '', message: '' });\r\n            } else {\r\n                alert(\"Failed to send message.\");\r\n            }\r\n        } catch (error) {\r\n            alert(\"Error sending message.\");\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    // Header spacing fix to prevent red line at top\r\n    useEffect(() => {\r\n        const spacer = document.querySelector('.header-spacer');\r\n        const header = document.querySelector('.main-header');\r\n        if (spacer && header) {\r\n            spacer.style.height = `${header.getBoundingClientRect().height}px`;\r\n        }\r\n        return () => {\r\n            if (spacer) spacer.style.height = '';\r\n        };\r\n    }, []);\r\n\r\n    // Scroll to top when component loads\r\n    useEffect(() => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"contact-page-container\">\r\n            <section className=\"contact-page-section\">\r\n                <div className=\"contact-page-form-wrapper\">\r\n                    <h2 className=\"contact-page-title\">Contact Us</h2>\r\n                    <form className=\"contact-page-form\" onSubmit={handleSubmit}>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            placeholder=\"Full Name\"\r\n                            value={formData.name}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                        />\r\n                        \r\n                        <input\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Email Address\"\r\n                            value={formData.email}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                        />\r\n                        \r\n                        <input\r\n                            type=\"tel\"\r\n                            name=\"phone\"\r\n                            placeholder=\"Phone Number\"\r\n                            value={formData.phone}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                        />\r\n                        \r\n                        <CustomDropdown\r\n                            options={productOptions}\r\n                            placeholder=\"Select a Product\"\r\n                            value={formData.product}\r\n                            onChange={handleInputChange}\r\n                            name=\"product\"\r\n                        />\r\n                        \r\n                        <textarea\r\n                            name=\"message\"\r\n                            placeholder=\"Type your message here...\"\r\n                            rows=\"4\"\r\n                            value={formData.message}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                        />\r\n                        \r\n                        <button type=\"submit\">Send</button>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"contact-page-info\">\r\n                    <h3>Our Office</h3>\r\n                    <p><strong>Munoth Industries</strong></p>\r\n                    <p>Door. 1108, KAattabomman Salai,</p>\r\n                    <p>Madavaram Red Hills Road</p>\r\n                    <p>Chennai - 600052</p>\r\n                    <p>ðŸ“§ munothindustries@gmail.com</p>\r\n                    <p>ðŸ“ž (+91) 8754595600 / 7639754545</p>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Contact;"],"names":["_ref","options","placeholder","value","onChange","name","isOpen","setIsOpen","useState","selectedOption","setSelectedOption","find","opt","label","dropdownRef","useRef","useEffect","handleClickOutside","event","current","contains","target","handleEscape","key","document","addEventListener","removeEventListener","_jsxs","className","ref","children","concat","onClick","handleToggle","_jsx","style","color","map","option","index","handleOptionClick","formData","setFormData","email","phone","product","message","handleInputChange","e","prev","_objectSpread","spacer","querySelector","header","height","getBoundingClientRect","window","scrollTo","top","behavior","onSubmit","async","preventDefault","fetch","method","headers","body","JSON","stringify","ok","alert","error","console","type","required","CustomDropdown","rows"],"sourceRoot":""}